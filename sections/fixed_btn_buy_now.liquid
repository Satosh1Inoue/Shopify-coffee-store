  <!-- ⬇︎⬇︎⬇︎⬇︎カート追加ボタン⬇︎⬇︎⬇︎⬇︎ -->
   <div class="fixed_btn-{{ section.id }}" id="js-fixed-btn-{{ section.id }}">
     <p class="product__title" {{ block.shopify_attributes }} style="line-height: 1;">{{ product.title | escape }}</p>
     <div style="padding-bottom: 1em;">
        <div class="no-js-hidden" id="price-{{ section.id }}" {{ block.shopify_attributes }}>
          {%- render 'price', product: product, use_variant: true, show_badges: true, price_class: 'price--large' -%}
          {%- if shop.taxes_included or shop.shipping_policy.body != blank -%}
           <span class="product__tax caption rte">
             {%- if shop.taxes_included -%}
               {{ 'products.product.include_taxes' | t }}
             {%- endif -%}
           </span>
      </div>
    </div>
  {%- endif -%}

  {%- comment -%}バリエーションピッカー{%- endcomment -%}
  {%- unless product.has_only_default_variant -%}
  {%- if block.settings.picker_type == 'button' -%}
    <variant-radios class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
      {%- for option in product.options_with_values -%}
          <fieldset class="js product-form__input">
            <legend class="form__label">{{ option.name }}</legend>
            {%- for value in option.values -%}
              <input type="radio" id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                    name="{{ option.name }}"
                    value="{{ value | escape }}"
                    form="{{ product_form_id }}"
                    {% if option.selected_value == value %}checked{% endif %}
              >
              <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
                {{ value }}
              </label>
            {%- endfor -%}
          </fieldset>
      {%- endfor -%}
      <script type="application/json">
        {{ product.variants | json }}
      </script>
    </variant-radios>
  {%- else -%}
    <variant-selects class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
      {%- for option in product.options_with_values -%}
        <div class="product-form__input product-form__input--dropdown variant-content-flex" style="margin-bottom:0; width:50%">
          <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
            {{ option.name }}
          </label>
          <div class="select">
            <select id="Option-{{ section.id }}-{{ forloop.index0 }}"
              class="select__select"
              name="options[{{ option.name | escape }}]"
              form="{{ product_form_id }}"
            >
              {%- for value in option.values -%}
                <option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected"{% endif %}>
                  {{ value }}
                </option>
              {%- endfor -%}
            </select>
            {% render 'icon-caret' %}
          </div>
        </div>
      {%- endfor -%}

      <script type="application/json">
        {{ product.variants | json }}
      </script>
    </variant-selects>
  {%- endif -%}
{%- endunless -%}

  {%- comment -%}数量セレクター{%- endcomment -%}
  <div class="product-form__input product-form__quantity{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} product-form__quantity-top{% endif %}" {{ block.shopify_attributes }}>
    <label class="form__label" for="Quantity-{{ section.id }}">
      {{ 'products.product.quantity.label' | t }}
    </label>

    <quantity-input class="quantity" style="width:100%">
      <button class="quantity__button no-js-hidden" name="minus" type="button">
        <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>
        {% render 'icon-minus' %}
      </button>
      <input class="quantity__input"
          type="number"
          name="quantity"
          id="Quantity-{{ section.id }}"
          min="1"
          value="1"
          form="{{ product_form_id }}"
        >
      <button class="quantity__button no-js-hidden" name="plus" type="button">
        <span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: product.title | escape }}</span>
        {% render 'icon-plus' %}
      </button>
    </quantity-input>
  </div>

  <div {{ block.shopify_attributes }}>
    <product-form class="product-form">
      <div class="product-form__error-message-wrapper" role="alert" hidden>
        <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-error" viewBox="0 0 13 13">
          <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
          <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
          <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
          <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
        </svg>
        <span class="product-form__error-message"></span>
      </div>
      {%- form 'product', product, id: product_form_id_test, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
        <div class="product-form__buttons">
          <button
            type="submit"
            name="add"
            class="product-form__submit button button--full-width {% if block.settings.show_dynamic_checkout and product.selling_plan_groups == empty %}button--secondary{% else %}button--primary{% endif %}"
          {% if product.selected_or_first_available_variant.available == false %}disabled{% endif %}
          >
              <span>
                {%- if product.selected_or_first_available_variant.available -%}
                  {{ 'products.product.add_to_cart' | t }}
                {%- else -%}
                  {{ 'products.product.sold_out' | t }}
                {%- endif -%}
              </span>
              <div class="loading-overlay__spinner hidden">
                <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                  <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                </svg>
              </div>
          </button>
          {% if section.settings.enable_fixed_btn_buy_now == true %}
            {{ form | payment_button }}
          {%- endif -%}
        </div>
      {%- endform -%}
    </product-form>
   </div>
   <!-- ⬆︎⬆︎⬆︎⬆︎カート追加ボタン⬆︎⬆︎⬆︎⬆︎ -->

{% style %}
.variant-content-flex{
  display:inline-block;
}

#js-fixed-btn-{{ section.id }}
{
  position: fixed;
  bottom: 100px; 
  right: 0;
  padding: 30px 40px;
  opacity: 0;
  pointer-events: none;
  transition: all 1s ease;
  z-index: 10;
  background-color:#fff;
  box-shadow: 0 0 9px #ccc;
  width: 280px;
 }
  
 #js-fixed-btn-{{ section.id }}.show {
    opacity: 1;
    pointer-events: auto;
    transform: none;
 }

 @media only screen and (max-width: 749px) {
    #js-fixed-btn-{{ section.id }}
      {
        width: 100%;
        bottom: 0; 
        padding: 1vw 2vw 1vw 2vw;
        height: auto;
      }
   }
{% endstyle %}
<script>
  window.onload=function(){
    let Animation = function() {
  
    let pageTop =  document.getElementById('js-fixed-btn-{{ section.id }}');

    let rect = pageTop.getBoundingClientRect();
    
    let scrollTop = rect.top + window.pageYOffset;

    if(scrollTop > 3000){
      pageTop.classList.add('show');
      }  else {
      pageTop.classList.remove('show');
      }
    }
      window.addEventListener('scroll', Animation);
}
  </script> 

{% schema %}
  {
    "name": "追従カート機能",
    "limit": 1,
    "settings": [
        { 
            "type": "checkbox",
            "id": "enable_fixed_btn_buy_now",
            "default": false,
            "label": "今すぐ購入ボタンを表示"
        }
    ],
   "presets": [
    {
        "category": "Custom Content",
        "name":"スクロール追従カート"
    }
   ],
   "templates": ["product"]
  }
  {% endschema %}